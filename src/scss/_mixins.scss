/*
	Constants
*/
$color-background : #ffffff;
$color-text : #1e1e1e;
$color-passive : #ff6a00;
$color-active : #d45800;
$color-hover : #ff9800;
$color-disabled : #7f7f7f;
$color-highlight : #eeeeee;
$iconSize : 64px;
$remSize : 12;
/*
	Hides text in the margin
*/
@mixin obfuscate ($distance:100) {
	overflow : hidden;
	text-align : left;
	text-indent : ($distance + 10) + px;
	white-space : nowrap;
}
/*
	Turns a button into an icon
*/
@mixin iconParent ($size:32, $unit:px) {
	overflow : hidden;
	position : relative;
	text-align : left;
	text-indent : ($size + 10) + $unit;
	white-space : nowrap;
	/* Because of Internet Explorer 8 we can't have nice thing. */
	overflow : visible;
	text-indent : -999em;
}
/*
	Centres a graphic or glyph inside an icon
*/
@mixin iconCenter ($size:32, $unit:px, $char:'', $margin:0.5) {
	content : $char;
	display : block;
	font-family : FontAwesome;
	@if $unit == 'rem' {
		font-size : ($size * $remSize * $margin) + px;
		height : ($size * $remSize) + px;
		line-height : ($size * $remSize) + px;
		margin-left : ($size * $remSize / -2) + px;
		margin-top : ($size * $remSize / -2) + px;
		width : ($size * $remSize) + px;
	}
	@if $char != '' {
		text-indent : 0;
	}
	font-size : ($size * $margin) + $unit;
	height : $size + $unit;
	line-height : $size + $unit;
	margin-left : ($size / -2) + $unit;
	margin-top : ($size / -2) + $unit;
	width : $size + $unit;
	position : absolute;
	left : 50%;
	text-align : center;
	top : 50%;
}
/*
	Offers both the pixel and rem value of a single property
*/
@mixin rem ($name:'', $value:'') {
	#{$name} : ($remSize * $value) + px;
	#{$name} : $value + rem;
}
/*
	Offers both the pixel and rem values of a shorthand property
*/
@mixin rems ($name:'', $top:'', $right:'', $bottom:'', $left:'') {
	@if $top != '' {
		#{$name}-top : ($remSize * $top) + px;
		#{$name}-top : $top + rem;
	}
	@if $right != '' {
		#{$name}-right : ($remSize * $right) + px;
		#{$name}-right : $right + rem;
	}
	@if $bottom != '' {
		#{$name}-bottom : ($remSize * $bottom) + px;
		#{$name}-bottom : $bottom + rem;
	}
	@if $left != '' {
		#{$name}-left : ($remSize * $left) + px;
		#{$name}-left : $left + rem;
	}
}
/*
	Offers the text size as both the pixel and rem value
*/
@mixin text ($size) {
	@if $size == s {
		font-size : ($remSize * 0.875) + px;
		font-size : 0.875rem;
	} @else if $size == m {
		font-size : ($remSize * 1) + px;
		font-size : 1rem;
	} @else if $size == l {
		font-size : ($remSize * 1.25) + px;
		font-size : 1.25rem;
	} @else if $size == xl {
		font-size : ($remSize * 1.625) + px;
		font-size : 1.625rem;
	} @else if $size == xxl {
		font-size : ($remSize * 1.875) + px;
		font-size : 1.875rem;
	} @else {
		font-size : ($remSize * $size) + px;
		font-size : $size + rem;
	}
}
/*
	Adds vendor prefixed to a property
*/
@mixin vendors ($name:'', $value:'') {
	-o-#{$name} : #{$value};
	-ms-#{$name} : #{$value};
	-moz-#{$name} : #{$value};
	-webkit-#{$name} : #{$value};
	#{$name} : #{$value};
}
/*
	Applies the "clearfix" hack to a container with floating content
*/
@mixin clearfix () {
	*zoom: 1;
	&:after {
		clear: both;
		content: " ";
		display: block;
		font-size: 0;
		height: 0;
		visibility: hidden;
	}
}